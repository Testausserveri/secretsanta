/// <reference types="node" />
import { Subscribers } from './subscribers/subscribers';
import { EventEmitter } from 'events';
import { INovu, INovuConfiguration } from './novu.interface';
import { IBroadcastPayloadOptions, ITriggerPayloadOptions } from './subscribers/subscriber.interface';
export declare class Novu extends EventEmitter implements INovu {
    private readonly apiKey?;
    private readonly http;
    readonly subscribers: Subscribers;
    constructor(apiKey: string, config?: INovuConfiguration);
    trigger(eventId: string, data: ITriggerPayloadOptions): Promise<import("axios").AxiosResponse<any, any>>;
    broadcast(eventId: string, data: IBroadcastPayloadOptions): Promise<import("axios").AxiosResponse<any, any>>;
    private buildBackendUrl;
}
//# sourceMappingURL=novu.d.ts.map